apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'app.cash.sqldelight'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

ktlint {
    version = "$ktlint_version"
    android = true
    outputToConsole = true
    ignoreFailures = false
    verbose = true
}

sqldelight {
    databases {
        Database {
            packageName = "nl.tudelft.valuetransfer.sqldelight"
            srcDirs = files(["src/main/sqldelight"])
            schemaOutputDirectory = file("src/main/sqldelight/databases")
        }
    }
}

repositories {
    maven {
        url 'https://jitpack.io'
    }
}

android {
    defaultConfig {
        minSdkVersion 26
        compileSdk 34
        targetSdkVersion 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/kotlinx-coroutines-core.kotlin_module']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17.VERSION_17
        targetCompatibility JavaVersion.VERSION_17.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildFeatures {
        viewBinding = true
    }

    namespace 'nl.tudelft.trustchain.valuetransfer'
}

dependencies {
    api project(':common')
    api project(':eurotoken')

    // AndroidX
    api "androidx.appcompat:appcompat:$appcompat_version"
    api "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    api "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Material
    api "com.google.android.material:material:$material_version"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.7.7'

    api "com.github.MattSkala:recyclerview-itemadapter:$recyclerview_adapter_version"
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.android.gms:play-services-location:21.1.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // Testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$android_junit_version"

    // Blocking dialog and top snacbkbar
    api 'com.jaredrummler:blocking-dialog:1.0.0'
    implementation 'com.github.Redman1037:TSnackBar:V2.0.0'

    // Passport onboarding
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api('org.jmrtd:jmrtd:0.7.18') {
        exclude group: 'org.bouncycastle'
    }
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:16.0.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.github.mhshams:jnbis:1.1.0'
    implementation 'net.sf.scuba:scuba-sc-android:0.0.20'
    implementation 'com.madgag.spongycastle:prov:1.58.0.0'

    // Zoom image
    api 'com.jsibbold:zoomage:1.3.1'

    // Side to confirm
    api "com.ncorti:slidetoact:0.9.0"

    implementation "com.android.volley:volley:1.2.1"

    // Transitive dependencies
    androidTestImplementation 'androidx.test:monitor:1.6.1'
    api 'androidx.cardview:cardview:1.0.0'
    api "androidx.fragment:fragment-ktx:$fragment_version"
    api "androidx.lifecycle:lifecycle-livedata-core-ktx:$lifecycle_version"
    api 'androidx.viewpager:viewpager:1.0.0'
    api 'com.google.mlkit:common:16.0.0'
    api(project(':ipv8')) {
        exclude module: 'lazysodium-java'
    }
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation "androidx.lifecycle:lifecycle-common:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation 'androidx.sqlite:sqlite-ktx:2.4.0'
    implementation 'app.cash.sqldelight:android-driver:2.0.1'
    implementation 'app.cash.sqldelight:coroutines-extensions:2.0.1'
    implementation 'com.google.mlkit:vision-common:16.0.0'
    implementation 'net.sf.scuba:scuba-smartcards:0.0.18'
    implementation project(':ipv8-android')
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            "-opt-in=kotlin.ExperimentalUnsignedTypes",
    ]
}
