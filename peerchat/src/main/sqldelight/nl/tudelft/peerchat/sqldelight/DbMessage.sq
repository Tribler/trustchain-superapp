CREATE TABLE messages (
    id TEXT NOT NULL,
    message TEXT NOT NULL,
    sender_public_key BLOB NOT NULL,
    recipient_public_key BLOB NOT NULL,
    outgoing INTEGER NOT NULL,
    timestamp INTEGER NOT NULL,
    ack INTEGER NOT NULL,
    read INTEGER NOT NULL,
    attachment_type TEXT,
    attachment_size INTEGER,
    attachment_content BLOB,
    attachment_fetched INTEGER NOT NULL DEFAULT 0,
    transaction_hash BLOB,
    PRIMARY KEY (id)
);

addMessage:
INSERT INTO messages (id, message, sender_public_key, recipient_public_key, outgoing, timestamp, ack, read, attachment_type, attachment_size, attachment_content, attachment_fetched, transaction_hash)
VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

ackMessage:
UPDATE messages SET ack = 1 WHERE id = ?;

getAll:
SELECT * FROM messages ORDER BY timestamp ASC;

getAllByPublicKey:
SELECT * FROM messages WHERE sender_public_key = ? OR recipient_public_key = ?
ORDER BY timestamp ASC;

getUnacknowledgedMessages:
SELECT * FROM messages WHERE ack = 0 AND outgoing = 1;

getUnfetchedAttachments:
SELECT * FROM messages WHERE attachment_fetched = 0 AND outgoing = 0;

ack:
UPDATE messages SET ack = 1 WHERE id = ?;

getLastByPublicKey:
SELECT * FROM messages WHERE sender_public_key = ? OR recipient_public_key = ?
ORDER BY timestamp DESC LIMIT 1;

setAttachmentFetched:
UPDATE messages SET attachment_fetched = 1 WHERE attachment_content = ?;

deleteMessagesOfPublicKey:
DELETE FROM messages WHERE sender_public_key = ? OR recipient_public_key = ?;

getMessageById:
SELECT * FROM messages WHERE id = ?;

getMessageByTransactionHash:
SELECT * FROM messages WHERE transaction_hash = ?;