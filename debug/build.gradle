apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

ktlint {
    version = "$ktlint_version"
    android = true
    outputToConsole = true
    ignoreFailures = false
    verbose = true
}

android {
    defaultConfig {
        minSdkVersion 26
        compileSdk 34
        targetSdkVersion 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildFeatures {
        viewBinding = true
    }
    namespace 'nl.tudelft.trustchain.debug'
}

dependencies {
    api project(':common')

    // AndroidX
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Testing
    testImplementation 'junit:junit:4.12'

    // Transitive dependencies
    implementation 'androidx.core:core:1.9.0'
    implementation 'androidx.fragment:fragment:1.5.4'
    implementation 'androidx.lifecycle:lifecycle-common:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-runtime:2.5.3'
    implementation(project(':ipv8')) {
        exclude module: 'lazysodium-java'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            "-opt-in=kotlin.RequiresOptIn"
    ]
}
