apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'androidx.navigation.safeargs.kotlin'


//apply plugin: 'java-library'
apply plugin: 'com.google.protobuf'
//apply plugin: 'maven-publish'
//apply plugin: 'eclipse'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    defaultConfig {
        minSdk 22
        targetSdk 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        externalNativeBuild {
            cmake {
                cppFlags '-std=c++17'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        allWarningsAsErrors = true
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {

    compile fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':common')

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0-M1-1.4.0-rc'

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.7.7'
    implementation ('net.java.dev.jna:jna:5.5.0@aar')
    implementation('com.github.tony19:logback-android:2.0.0')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Bitcoin
    api 'org.bouncycastle:bcprov-jdk15to18:1.69'
    api 'com.google.guava:guava:31.0.1-android'
    api 'com.google.protobuf:protobuf-javalite:3.18.0'
    api 'com.squareup.okhttp3:okhttp:3.14.9'
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'net.jcip:jcip-annotations:1.0'
    compileOnly 'org.fusesource.leveldbjni:leveldbjni-all:1.8'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.easymock:easymock:3.2'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.5.2'
    testImplementation 'org.slf4j:slf4j-jdk14:1.7.32'
    testImplementation 'com.h2database:h2:1.3.167'
    testImplementation 'org.fusesource.leveldbjni:leveldbjni-all:1.8'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:2.5.2'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.18.0'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
    generatedFilesBaseDir = new File(projectDir, '/src') // workaround for '$projectDir/src'
}

//test {
//    exclude 'org/bitcoinj/core/PeerTest*'
//    exclude 'org/bitcoinj/core/TransactionBroadcastTest*'
//    exclude 'org/bitcoinj/net/discovery/DnsDiscoveryTest*'
//    testLogging {
//        events "failed"
//        exceptionFormat "full"
//    }
//}

//ext.moduleName = 'org.bitcoinj.core'
//
//jar {
//    inputs.property("moduleName", moduleName)
//    manifest {
//        attributes 'Automatic-Module-Name': moduleName
//    }
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}
//
//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}
//
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            artifactId = 'bitcoinj-core'
//            from components.java
//            artifact sourcesJar
//            artifact javadocJar
//
//            pom {
//                description = 'A Java Bitcoin library'
//            }
//        }
//    }
//}
