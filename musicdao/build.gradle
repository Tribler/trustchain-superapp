apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    buildFeatures {
        viewBinding = true
    }

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        allWarningsAsErrors = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {
    implementation project(':gossipML')
    implementation project(':common')
    api(project(':ipv8-android')){
        exclude group: 'net.java.dev.jna'
        exclude group: 'org.bouncycastle'
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.3'
    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0-M1-1.4.0-rc'

    // BitTorrent/Libtorrent libraries
    implementation 'com.turn:ttorrent-core:1.5'

    implementation 'com.google.android.exoplayer:exoplayer-core:2.10.5'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.10.5'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.10.5'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.10.5'

    // Cryptocurrency integration
    implementation 'org.bitcoinj:bitcoinj-core:0.15.10'
//    implementation 'com.google.guava:guava:29.0-android'
    implementation 'org.knowm.xchange:xchange-parent:5.0.1'
    implementation 'org.knowm.xchange:xchange-binance:5.0.1'

    // Crypto library for testing
    testImplementation "com.goterl:lazysodium-java:5.0.1"

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "org.robolectric:robolectric:3.4.2"

    // Testing and generating example data
    implementation "com.squareup.sqldelight:sqlite-driver:$sqldelight_version"

    // Reading MP3 metadata
    implementation 'com.mpatric:mp3agic:0.9.1'

    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.7.7'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
        "-Xuse-experimental=kotlin.Experimental,kotlin.ExperimentalUnsignedTypes",
        "-Werror" // Set Kotlin compiler warnings as errors
    ]
}

tasks.withType(Test) {
    systemProperty "java.library.path", "./src/main/jniLibs"
}
